package im.youtiao.android_client.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import im.youtiao.android_client.greendao.User;
import im.youtiao.android_client.greendao.Channel;
import im.youtiao.android_client.greendao.Feed;
import im.youtiao.android_client.greendao.Comment;

import im.youtiao.android_client.greendao.UserDao;
import im.youtiao.android_client.greendao.ChannelDao;
import im.youtiao.android_client.greendao.FeedDao;
import im.youtiao.android_client.greendao.CommentDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig channelDaoConfig;
    private final DaoConfig feedDaoConfig;
    private final DaoConfig commentDaoConfig;

    private final UserDao userDao;
    private final ChannelDao channelDao;
    private final FeedDao feedDao;
    private final CommentDao commentDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        channelDaoConfig = daoConfigMap.get(ChannelDao.class).clone();
        channelDaoConfig.initIdentityScope(type);

        feedDaoConfig = daoConfigMap.get(FeedDao.class).clone();
        feedDaoConfig.initIdentityScope(type);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        channelDao = new ChannelDao(channelDaoConfig, this);
        feedDao = new FeedDao(feedDaoConfig, this);
        commentDao = new CommentDao(commentDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Channel.class, channelDao);
        registerDao(Feed.class, feedDao);
        registerDao(Comment.class, commentDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        channelDaoConfig.getIdentityScope().clear();
        feedDaoConfig.getIdentityScope().clear();
        commentDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public ChannelDao getChannelDao() {
        return channelDao;
    }

    public FeedDao getFeedDao() {
        return feedDao;
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

}
